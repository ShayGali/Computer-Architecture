// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/a/RAM64.hdl

/**
 * Memory of 64 registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM64 {
    IN in[16], load, address[6];
    OUT out[16];

    PARTS:
    DMux8Way(in=load, sel=address[0..2], a=r0load, b=r1load, c=r2load, d=r3load, e=r4load, f=r5load, g=r6load, h=r7load);
    RAM8(in=in, load=r0load, address=address[3..5], out=r0out);
    RAM8(in=in, load=r1load, address=address[3..5], out=r1out);
    RAM8(in=in, load=r2load, address=address[3..5], out=r2out);
    RAM8(in=in, load=r3load, address=address[3..5], out=r3out);
    RAM8(in=in, load=r4load, address=address[3..5], out=r4out);
    RAM8(in=in, load=r5load, address=address[3..5], out=r5out);
    RAM8(in=in, load=r6load, address=address[3..5], out=r6out);
    RAM8(in=in, load=r7load, address=address[3..5], out=r7out);
    Mux8Way16(a=r0out, b=r1out, c=r2out, d=r3out, e=r4out, f=r5out, g=r6out, h=r7out, sel=address[0..2], out=out);
}